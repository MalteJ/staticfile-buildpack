#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output
set -x          # enable debugging

# Configure directories
build_dir=$1
cache_dir=$2

# Version
apache_version="2.4.10"

compile_buildpack_dir=$(cd $(dirname $0); cd ..; pwd)
compile_buildpack_bin=$compile_buildpack_dir/bin

# Load some convenience functions like status(), echo(), and indent()
source $compile_buildpack_dir/bin/common.sh

compile_apache_tgz="$compile_buildpack_dir/vendor/httpd-$apache_version.tar.gz"
cd $build_dir

# Alternate root location (default is root of project) for html/js/css
# root: dist/
if [[ "$(grep root: Staticfile)X" != "X" ]]; then
  root_dir=$(grep root: Staticfile | sed -e 's/^root: *//')
  status "Root folder $root_dir"
else
  status "Using root folder"
fi
root_dir=${root_dir:-.}

status "Copying project files into htdocs/"
mkdir -p $cache_dir/htdocs
mv $root_dir/* $cache_dir/htdocs
mv $cache_dir/htdocs .

# if using root dir, then Staticfile* files would be accessible by nginx
if [[ -f htdocs/Staticfile ]]; then
  echo "Moving Staticfile away from public access" | indent
  mv htdocs/Staticfile* .
fi

status "Setting up apache2"
tar xzf $compile_apache_tgz
cp -f $compile_buildpack_dir/conf/httpd.conf apache2/conf/httpd.conf

[[ -f $build_dir/htdocs/httpd.conf ]] && mv $build_dir/htdocs/httpd.conf apache2/conf/httpd.conf

cp $compile_buildpack_bin/boot.sh .
